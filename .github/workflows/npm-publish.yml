name: Publish to npm

on:
  release:
    types: [published]
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 24.1.0
        uses: actions/setup-node@v4
        with:
          node-version: "24.1.0"
          registry-url: "https://registry.npmjs.org"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm build

      - name: Check if version is already published
        id: check-version
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")

          echo "Checking if $PACKAGE_NAME@$PACKAGE_VERSION is already published..."

          if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" version 2>/dev/null; then
            echo "Version $PACKAGE_VERSION is already published on npm"
            echo "already_published=true" >> $GITHUB_OUTPUT
          else
            echo "Version $PACKAGE_VERSION is not yet published"
            echo "already_published=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.check-version.outputs.already_published == 'false'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish notification
        if: steps.check-version.outputs.already_published == 'true'
        run: echo "Skipping publish - version already exists on npm"
